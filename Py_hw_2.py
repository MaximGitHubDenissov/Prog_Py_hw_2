# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.

# from random import randint
# my_list = [randint(0,1) for _ in range(10)]
# print(my_list)
# a = my_list.count(0)
# b = my_list.count(1)
# print(min(a,b))

# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.

# b = int(input('Введите сумму чисел:  '))
# c = int(input('Введите произведение чисел:  '))

# D = b**2-4*c
# x1 = int(((b+D**0.5)/2))
# x2 = b-x1
# print(f'Ваши числа {x1} и {x2}')

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа
# вида 2k
# ), не превосходящие числа N.

# N = int(input('Задайте число N: '))
# num = 0
# while 2**num <= N:
#     print(2**num, end=' ')
#     num+=1

# 3 обязательных задачи есть в презентации.

# Задача 3 НЕОБЯЗАТЕЛЬНАЯ. Напишите программу для. 
# проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z (Теорема Де Моргана) . 
# Но теперь количество предикатов не три, а генерируется случайным образом от 5 до 25, 
# сами значения предикатов случайные, проверяем это утверждение 100 раз, 
# с помощью модуля time выводим на экран , сколько времени отработала программа. 
# В конце вывести результат проверки истинности этого утверждения.

# from random import randint, choice
# import time
# start = time.time()
# for _ in range(100):
#     my_list = [choice([True, False]) for _ in range(randint(5,25))]
#     print(not (any(my_list)) == (not all(my_list)))
# print(time.time() - start)

# задача 4 НЕГА необязательная Задайте число. 
# Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.

# *Пример:*

# - для k = 8 список будет выглядеть так: 
# [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]
# - 


# n = int(input('Введите число: '))
# first = 0
# second = 1
# my_list = [second, first, second]
# for i in range (n-1):
#     sum = first-second
#     first = second
#     second = sum
#     my_list.insert(0, sum)
#     my_list.append(abs(sum))
# print(my_list)    

# Задача 5 - HARD необязательная

# Напишите программу, которая принимает на вход координаты двух точек 
# и находит расстояние между ними в N-мерном пространстве. 
# Сначала задается N с клавиатуры, потом задаются координаты точек.
i = 1
D = 0
N = int(input('Введите N-мерность пространства:  '))
while i <=N:
    x1 = int(input(f'Введите координату первой точки в {i} пространстве: '))
    x2 = int(input(f'Введите координату второй точки в {i} пространстве: '))
    D += (x2-x1)**2
    i+=1
result = D**0.5
print (round(result,2)) 